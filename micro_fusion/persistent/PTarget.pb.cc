// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PTarget.proto

#include "PTarget.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr PMat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{::int64_t{0}},
        cols_{0},
        rows_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PMat::PMat(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PMatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PMatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PMatDefaultTypeInternal() {}
  union {
    PMat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PMatDefaultTypeInternal _PMat_default_instance_;

inline constexpr PIndexPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PIndexPoint::PIndexPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PIndexPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PIndexPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PIndexPointDefaultTypeInternal() {}
  union {
    PIndexPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PIndexPointDefaultTypeInternal _PIndexPoint_default_instance_;

inline constexpr PCoordinate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PCoordinate::PCoordinate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PCoordinateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PCoordinateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PCoordinateDefaultTypeInternal() {}
  union {
    PCoordinate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PCoordinateDefaultTypeInternal _PCoordinate_default_instance_;

inline constexpr PTarget::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_{nullptr},
        position_{nullptr},
        time_stamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PTarget::PTarget(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PTargetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PTargetDefaultTypeInternal() {}
  union {
    PTarget _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PTargetDefaultTypeInternal _PTarget_default_instance_;

inline constexpr PIndexPointArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PIndexPointArray::PIndexPointArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PIndexPointArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PIndexPointArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PIndexPointArrayDefaultTypeInternal() {}
  union {
    PIndexPointArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PIndexPointArrayDefaultTypeInternal _PIndexPointArray_default_instance_;

inline constexpr PTargetArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        targets_{},
        uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latest_position_{nullptr},
        update_time_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PTargetArray::PTargetArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PTargetArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PTargetArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PTargetArrayDefaultTypeInternal() {}
  union {
    PTargetArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PTargetArrayDefaultTypeInternal _PTargetArray_default_instance_;
static ::_pb::Metadata file_level_metadata_PTarget_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_PTarget_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_PTarget_2eproto = nullptr;
const ::uint32_t TableStruct_PTarget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PMat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PMat, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::PMat, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::PMat, _impl_.cols_),
    PROTOBUF_FIELD_OFFSET(::PMat, _impl_.rows_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PCoordinate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PCoordinate, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::PCoordinate, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::PCoordinate, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::PTarget, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::PTarget, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PTarget, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::PTarget, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::PTarget, _impl_.image_),
    PROTOBUF_FIELD_OFFSET(::PTarget, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::PTarget, _impl_.time_stamp_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _impl_.latest_position_),
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _impl_.update_time_),
    PROTOBUF_FIELD_OFFSET(::PTargetArray, _impl_.targets_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PIndexPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PIndexPoint, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::PIndexPoint, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::PIndexPoint, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::PIndexPoint, _impl_.z_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PIndexPointArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PIndexPointArray, _impl_.points_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::PMat)},
        {12, -1, -1, sizeof(::PCoordinate)},
        {23, 36, -1, sizeof(::PTarget)},
        {41, 54, -1, sizeof(::PTargetArray)},
        {59, -1, -1, sizeof(::PIndexPoint)},
        {71, -1, -1, sizeof(::PIndexPointArray)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_PMat_default_instance_._instance,
    &::_PCoordinate_default_instance_._instance,
    &::_PTarget_default_instance_._instance,
    &::_PTargetArray_default_instance_._instance,
    &::_PIndexPoint_default_instance_._instance,
    &::_PIndexPointArray_default_instance_._instance,
};
const char descriptor_table_protodef_PTarget_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rPTarget.proto\">\n\004PMat\022\014\n\004data\030\001 \001(\014\022\014\n"
    "\004size\030\002 \001(\003\022\014\n\004cols\030\003 \001(\005\022\014\n\004rows\030\004 \001(\005\""
    ".\n\013PCoordinate\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001"
    "z\030\003 \001(\002\"o\n\007PTarget\022\014\n\004uuid\030\001 \001(\t\022\014\n\004type"
    "\030\002 \001(\t\022\024\n\005image\030\003 \001(\0132\005.PMat\022\036\n\010position"
    "\030\004 \001(\0132\014.PCoordinate\022\022\n\ntime_stamp\030\005 \001(\003"
    "\"\201\001\n\014PTargetArray\022\014\n\004uuid\030\001 \001(\t\022\014\n\004type\030"
    "\002 \001(\t\022%\n\017latest_position\030\003 \001(\0132\014.PCoordi"
    "nate\022\023\n\013update_time\030\004 \001(\003\022\031\n\007targets\030\005 \003"
    "(\0132\010.PTarget\"<\n\013PIndexPoint\022\014\n\004uuid\030\001 \001("
    "\t\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\"0\n\020PI"
    "ndexPointArray\022\034\n\006points\030\001 \003(\0132\014.PIndexP"
    "ointb\006proto3"
};
static ::absl::once_flag descriptor_table_PTarget_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_PTarget_2eproto = {
    false,
    false,
    492,
    descriptor_table_protodef_PTarget_2eproto,
    "PTarget.proto",
    &descriptor_table_PTarget_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_PTarget_2eproto::offsets,
    file_level_metadata_PTarget_2eproto,
    file_level_enum_descriptors_PTarget_2eproto,
    file_level_service_descriptors_PTarget_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_PTarget_2eproto_getter() {
  return &descriptor_table_PTarget_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_PTarget_2eproto(&descriptor_table_PTarget_2eproto);
// ===================================================================

class PMat::_Internal {
 public:
};

PMat::PMat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PMat)
}
inline PROTOBUF_NDEBUG_INLINE PMat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

PMat::PMat(
    ::google::protobuf::Arena* arena,
    const PMat& from)
    : ::google::protobuf::Message(arena) {
  PMat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, rows_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::rows_));

  // @@protoc_insertion_point(copy_constructor:PMat)
}
inline PROTOBUF_NDEBUG_INLINE PMat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void PMat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           0,
           offsetof(Impl_, rows_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::rows_));
}
PMat::~PMat() {
  // @@protoc_insertion_point(destructor:PMat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PMat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PMat::Clear() {
// @@protoc_insertion_point(message_clear_start:PMat)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rows_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.rows_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PMat::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PMat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PMat_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 rows = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PMat, _impl_.rows_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PMat, _impl_.rows_)}},
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PMat, _impl_.data_)}},
    // int64 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PMat, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PMat, _impl_.size_)}},
    // int32 cols = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PMat, _impl_.cols_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PMat, _impl_.cols_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(PMat, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 size = 2;
    {PROTOBUF_FIELD_OFFSET(PMat, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 cols = 3;
    {PROTOBUF_FIELD_OFFSET(PMat, _impl_.cols_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 rows = 4;
    {PROTOBUF_FIELD_OFFSET(PMat, _impl_.rows_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PMat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PMat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // int64 size = 2;
  if (this->_internal_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_size(), target);
  }

  // int32 cols = 3;
  if (this->_internal_cols() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_cols(), target);
  }

  // int32 rows = 4;
  if (this->_internal_rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_rows(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PMat)
  return target;
}

::size_t PMat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PMat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int64 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_size());
  }

  // int32 cols = 3;
  if (this->_internal_cols() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cols());
  }

  // int32 rows = 4;
  if (this->_internal_rows() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_rows());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PMat::_class_data_ = {
    PMat::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PMat::GetClassData() const {
  return &_class_data_;
}

void PMat::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PMat*>(&to_msg);
  auto& from = static_cast<const PMat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PMat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_cols() != 0) {
    _this->_internal_set_cols(from._internal_cols());
  }
  if (from._internal_rows() != 0) {
    _this->_internal_set_rows(from._internal_rows());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PMat::CopyFrom(const PMat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PMat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PMat::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PMat::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PMat::InternalSwap(PMat* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PMat, _impl_.rows_)
      + sizeof(PMat::_impl_.rows_)
      - PROTOBUF_FIELD_OFFSET(PMat, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::google::protobuf::Metadata PMat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PTarget_2eproto_getter, &descriptor_table_PTarget_2eproto_once,
      file_level_metadata_PTarget_2eproto[0]);
}
// ===================================================================

class PCoordinate::_Internal {
 public:
};

PCoordinate::PCoordinate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PCoordinate)
}
PCoordinate::PCoordinate(
    ::google::protobuf::Arena* arena, const PCoordinate& from)
    : PCoordinate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PCoordinate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PCoordinate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
PCoordinate::~PCoordinate() {
  // @@protoc_insertion_point(destructor:PCoordinate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PCoordinate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PCoordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:PCoordinate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PCoordinate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PCoordinate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PCoordinate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PCoordinate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PCoordinate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PCoordinate)
  return target;
}

::size_t PCoordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PCoordinate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PCoordinate::_class_data_ = {
    PCoordinate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PCoordinate::GetClassData() const {
  return &_class_data_;
}

void PCoordinate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PCoordinate*>(&to_msg);
  auto& from = static_cast<const PCoordinate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PCoordinate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PCoordinate::CopyFrom(const PCoordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PCoordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PCoordinate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PCoordinate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PCoordinate::InternalSwap(PCoordinate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.z_)
      + sizeof(PCoordinate::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(PCoordinate, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata PCoordinate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PTarget_2eproto_getter, &descriptor_table_PTarget_2eproto_once,
      file_level_metadata_PTarget_2eproto[1]);
}
// ===================================================================

class PTarget::_Internal {
 public:
  using HasBits = decltype(std::declval<PTarget>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PTarget, _impl_._has_bits_);
  static const ::PMat& image(const PTarget* msg);
  static void set_has_image(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PCoordinate& position(const PTarget* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PMat& PTarget::_Internal::image(const PTarget* msg) {
  return *msg->_impl_.image_;
}
const ::PCoordinate& PTarget::_Internal::position(const PTarget* msg) {
  return *msg->_impl_.position_;
}
PTarget::PTarget(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PTarget)
}
inline PROTOBUF_NDEBUG_INLINE PTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uuid_(arena, from.uuid_),
        type_(arena, from.type_) {}

PTarget::PTarget(
    ::google::protobuf::Arena* arena,
    const PTarget& from)
    : ::google::protobuf::Message(arena) {
  PTarget* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.image_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::PMat>(arena, *from._impl_.image_)
                : nullptr;
  _impl_.position_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::PCoordinate>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.time_stamp_ = from._impl_.time_stamp_;

  // @@protoc_insertion_point(copy_constructor:PTarget)
}
inline PROTOBUF_NDEBUG_INLINE PTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uuid_(arena),
        type_(arena) {}

inline void PTarget::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, image_),
           0,
           offsetof(Impl_, time_stamp_) -
               offsetof(Impl_, image_) +
               sizeof(Impl_::time_stamp_));
}
PTarget::~PTarget() {
  // @@protoc_insertion_point(destructor:PTarget)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PTarget::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.type_.Destroy();
  delete _impl_.image_;
  delete _impl_.position_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:PTarget)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.image_ != nullptr);
      _impl_.image_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_.time_stamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PTarget::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 24, 2> PTarget::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PTarget, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PTarget_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string uuid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PTarget, _impl_.uuid_)}},
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PTarget, _impl_.type_)}},
    // .PMat image = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PTarget, _impl_.image_)}},
    // .PCoordinate position = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PTarget, _impl_.position_)}},
    // int64 time_stamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PTarget, _impl_.time_stamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PTarget, _impl_.time_stamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string uuid = 1;
    {PROTOBUF_FIELD_OFFSET(PTarget, _impl_.uuid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(PTarget, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .PMat image = 3;
    {PROTOBUF_FIELD_OFFSET(PTarget, _impl_.image_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PCoordinate position = 4;
    {PROTOBUF_FIELD_OFFSET(PTarget, _impl_.position_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 time_stamp = 5;
    {PROTOBUF_FIELD_OFFSET(PTarget, _impl_.time_stamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PMat>()},
    {::_pbi::TcParser::GetTable<::PCoordinate>()},
  }}, {{
    "\7\4\4\0\0\0\0\0"
    "PTarget"
    "uuid"
    "type"
  }},
};

::uint8_t* PTarget::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PTarget)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    const std::string& _s = this->_internal_uuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PTarget.uuid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PTarget.type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .PMat image = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::image(this),
        _Internal::image(this).GetCachedSize(), target, stream);
  }

  // .PCoordinate position = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // int64 time_stamp = 5;
  if (this->_internal_time_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_time_stamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PTarget)
  return target;
}

::size_t PTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTarget)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uuid());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .PMat image = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.image_);
    }

    // .PCoordinate position = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

  }
  // int64 time_stamp = 5;
  if (this->_internal_time_stamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_time_stamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PTarget::_class_data_ = {
    PTarget::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PTarget::GetClassData() const {
  return &_class_data_;
}

void PTarget::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PTarget*>(&to_msg);
  auto& from = static_cast<const PTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PTarget)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_image()->::PMat::MergeFrom(
          from._internal_image());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_position()->::PCoordinate::MergeFrom(
          from._internal_position());
    }
  }
  if (from._internal_time_stamp() != 0) {
    _this->_internal_set_time_stamp(from._internal_time_stamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PTarget::CopyFrom(const PTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PTarget::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PTarget::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PTarget::InternalSwap(PTarget* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PTarget, _impl_.time_stamp_)
      + sizeof(PTarget::_impl_.time_stamp_)
      - PROTOBUF_FIELD_OFFSET(PTarget, _impl_.image_)>(
          reinterpret_cast<char*>(&_impl_.image_),
          reinterpret_cast<char*>(&other->_impl_.image_));
}

::google::protobuf::Metadata PTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PTarget_2eproto_getter, &descriptor_table_PTarget_2eproto_once,
      file_level_metadata_PTarget_2eproto[2]);
}
// ===================================================================

class PTargetArray::_Internal {
 public:
  using HasBits = decltype(std::declval<PTargetArray>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_._has_bits_);
  static const ::PCoordinate& latest_position(const PTargetArray* msg);
  static void set_has_latest_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PCoordinate& PTargetArray::_Internal::latest_position(const PTargetArray* msg) {
  return *msg->_impl_.latest_position_;
}
PTargetArray::PTargetArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PTargetArray)
}
inline PROTOBUF_NDEBUG_INLINE PTargetArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        targets_{visibility, arena, from.targets_},
        uuid_(arena, from.uuid_),
        type_(arena, from.type_) {}

PTargetArray::PTargetArray(
    ::google::protobuf::Arena* arena,
    const PTargetArray& from)
    : ::google::protobuf::Message(arena) {
  PTargetArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.latest_position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::PCoordinate>(arena, *from._impl_.latest_position_)
                : nullptr;
  _impl_.update_time_ = from._impl_.update_time_;

  // @@protoc_insertion_point(copy_constructor:PTargetArray)
}
inline PROTOBUF_NDEBUG_INLINE PTargetArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        targets_{visibility, arena},
        uuid_(arena),
        type_(arena) {}

inline void PTargetArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latest_position_),
           0,
           offsetof(Impl_, update_time_) -
               offsetof(Impl_, latest_position_) +
               sizeof(Impl_::update_time_));
}
PTargetArray::~PTargetArray() {
  // @@protoc_insertion_point(destructor:PTargetArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PTargetArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.type_.Destroy();
  delete _impl_.latest_position_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PTargetArray::Clear() {
// @@protoc_insertion_point(message_clear_start:PTargetArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targets_.Clear();
  _impl_.uuid_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.latest_position_ != nullptr);
    _impl_.latest_position_->Clear();
  }
  _impl_.update_time_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PTargetArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 29, 2> PTargetArray::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PTargetArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string uuid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.uuid_)}},
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.type_)}},
    // .PCoordinate latest_position = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.latest_position_)}},
    // int64 update_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PTargetArray, _impl_.update_time_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.update_time_)}},
    // repeated .PTarget targets = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.targets_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string uuid = 1;
    {PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.uuid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .PCoordinate latest_position = 3;
    {PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.latest_position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 update_time = 4;
    {PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.update_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .PTarget targets = 5;
    {PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.targets_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PCoordinate>()},
    {::_pbi::TcParser::GetTable<::PTarget>()},
  }}, {{
    "\14\4\4\0\0\0\0\0"
    "PTargetArray"
    "uuid"
    "type"
  }},
};

::uint8_t* PTargetArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PTargetArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    const std::string& _s = this->_internal_uuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PTargetArray.uuid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PTargetArray.type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .PCoordinate latest_position = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::latest_position(this),
        _Internal::latest_position(this).GetCachedSize(), target, stream);
  }

  // int64 update_time = 4;
  if (this->_internal_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_update_time(), target);
  }

  // repeated .PTarget targets = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_targets_size()); i < n; i++) {
    const auto& repfield = this->_internal_targets().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PTargetArray)
  return target;
}

::size_t PTargetArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTargetArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PTarget targets = 5;
  total_size += 1UL * this->_internal_targets_size();
  for (const auto& msg : this->_internal_targets()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uuid());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // .PCoordinate latest_position = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.latest_position_);
  }

  // int64 update_time = 4;
  if (this->_internal_update_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_update_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PTargetArray::_class_data_ = {
    PTargetArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PTargetArray::GetClassData() const {
  return &_class_data_;
}

void PTargetArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PTargetArray*>(&to_msg);
  auto& from = static_cast<const PTargetArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PTargetArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_targets()->MergeFrom(
      from._internal_targets());
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_latest_position()->::PCoordinate::MergeFrom(
        from._internal_latest_position());
  }
  if (from._internal_update_time() != 0) {
    _this->_internal_set_update_time(from._internal_update_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PTargetArray::CopyFrom(const PTargetArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTargetArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PTargetArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PTargetArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PTargetArray::InternalSwap(PTargetArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.targets_.InternalSwap(&other->_impl_.targets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.update_time_)
      + sizeof(PTargetArray::_impl_.update_time_)
      - PROTOBUF_FIELD_OFFSET(PTargetArray, _impl_.latest_position_)>(
          reinterpret_cast<char*>(&_impl_.latest_position_),
          reinterpret_cast<char*>(&other->_impl_.latest_position_));
}

::google::protobuf::Metadata PTargetArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PTarget_2eproto_getter, &descriptor_table_PTarget_2eproto_once,
      file_level_metadata_PTarget_2eproto[3]);
}
// ===================================================================

class PIndexPoint::_Internal {
 public:
};

PIndexPoint::PIndexPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PIndexPoint)
}
inline PROTOBUF_NDEBUG_INLINE PIndexPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uuid_(arena, from.uuid_),
        _cached_size_{0} {}

PIndexPoint::PIndexPoint(
    ::google::protobuf::Arena* arena,
    const PIndexPoint& from)
    : ::google::protobuf::Message(arena) {
  PIndexPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));

  // @@protoc_insertion_point(copy_constructor:PIndexPoint)
}
inline PROTOBUF_NDEBUG_INLINE PIndexPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uuid_(arena),
        _cached_size_{0} {}

inline void PIndexPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
PIndexPoint::~PIndexPoint() {
  // @@protoc_insertion_point(destructor:PIndexPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PIndexPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PIndexPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:PIndexPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PIndexPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 24, 2> PIndexPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PIndexPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.z_)}},
    // string uuid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.uuid_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uuid = 1;
    {PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 4;
    {PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\13\4\0\0\0\0\0\0"
    "PIndexPoint"
    "uuid"
  }},
};

::uint8_t* PIndexPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PIndexPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    const std::string& _s = this->_internal_uuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PIndexPoint.uuid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PIndexPoint)
  return target;
}

::size_t PIndexPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PIndexPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uuid());
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PIndexPoint::_class_data_ = {
    PIndexPoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PIndexPoint::GetClassData() const {
  return &_class_data_;
}

void PIndexPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PIndexPoint*>(&to_msg);
  auto& from = static_cast<const PIndexPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PIndexPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PIndexPoint::CopyFrom(const PIndexPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PIndexPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PIndexPoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PIndexPoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PIndexPoint::InternalSwap(PIndexPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.z_)
      + sizeof(PIndexPoint::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(PIndexPoint, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata PIndexPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PTarget_2eproto_getter, &descriptor_table_PTarget_2eproto_once,
      file_level_metadata_PTarget_2eproto[4]);
}
// ===================================================================

class PIndexPointArray::_Internal {
 public:
};

PIndexPointArray::PIndexPointArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PIndexPointArray)
}
inline PROTOBUF_NDEBUG_INLINE PIndexPointArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : points_{visibility, arena, from.points_},
        _cached_size_{0} {}

PIndexPointArray::PIndexPointArray(
    ::google::protobuf::Arena* arena,
    const PIndexPointArray& from)
    : ::google::protobuf::Message(arena) {
  PIndexPointArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:PIndexPointArray)
}
inline PROTOBUF_NDEBUG_INLINE PIndexPointArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        _cached_size_{0} {}

inline void PIndexPointArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PIndexPointArray::~PIndexPointArray() {
  // @@protoc_insertion_point(destructor:PIndexPointArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PIndexPointArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PIndexPointArray::Clear() {
// @@protoc_insertion_point(message_clear_start:PIndexPointArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PIndexPointArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PIndexPointArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PIndexPointArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .PIndexPoint points = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PIndexPointArray, _impl_.points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .PIndexPoint points = 1;
    {PROTOBUF_FIELD_OFFSET(PIndexPointArray, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PIndexPoint>()},
  }}, {{
  }},
};

::uint8_t* PIndexPointArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PIndexPointArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .PIndexPoint points = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_points().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PIndexPointArray)
  return target;
}

::size_t PIndexPointArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PIndexPointArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PIndexPoint points = 1;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->_internal_points()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PIndexPointArray::_class_data_ = {
    PIndexPointArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PIndexPointArray::GetClassData() const {
  return &_class_data_;
}

void PIndexPointArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PIndexPointArray*>(&to_msg);
  auto& from = static_cast<const PIndexPointArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PIndexPointArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PIndexPointArray::CopyFrom(const PIndexPointArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PIndexPointArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PIndexPointArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PIndexPointArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PIndexPointArray::InternalSwap(PIndexPointArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
}

::google::protobuf::Metadata PIndexPointArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PTarget_2eproto_getter, &descriptor_table_PTarget_2eproto_once,
      file_level_metadata_PTarget_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
